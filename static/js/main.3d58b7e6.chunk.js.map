{"version":3,"sources":["components/Editor.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAUe,SAASA,EAAOC,GAE3B,IAAOC,EAAuCD,EAAvCC,SAASC,EAA8BF,EAA9BE,YAAYC,EAAkBH,EAAlBG,MAAMC,EAAYJ,EAAZI,SAClC,EAAuBC,oBAAS,GAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAMA,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBAAQO,KAAK,SAASD,UAAU,sBAAsBE,QAAS,kBAAIH,GAAQ,SAAAI,GAAQ,OAAKA,MAAxF,SACI,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGtD,cAAC,aAAD,CACIC,eAbZ,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAaDA,MAAOA,EACPK,UAAU,uBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,QCGlBC,MApCf,WACE,MAAwBnB,mBAAS,IAAjC,mBAAOoB,EAAP,KAAaC,EAAb,KACA,EAAsBrB,mBAAS,IAA/B,mBAAOsB,EAAP,KAAYC,EAAZ,KACA,EAAoBvB,mBAAS,IAA7B,mBAAOwB,EAAP,KAAWC,EAAX,KACA,EAA2BzB,mBAAS,IAApC,mBAAO0B,EAAP,KAAcC,EAAd,KAiBA,OAfAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAU,2BAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,kCAOR,KAEH,OAAO,kBAAKO,aAAaF,MACxB,CAACT,EAAME,EAAKE,IAIb,qCACE,sBAAKrB,UAAU,gBAAf,UACE,cAACT,EAAD,CAAQE,SAAS,MAAMC,YAAY,OAAOC,MAAOsB,EAAMrB,SAAUsB,IACjE,cAAC3B,EAAD,CAAQE,SAAS,MAAMC,YAAY,MAAMC,MAAOwB,EAAKvB,SAAUwB,IAC/D,cAAC7B,EAAD,CAAQE,SAAS,aAAaC,YAAY,KAAKC,MAAO0B,EAAIzB,SAAU0B,OAEtE,qBAAKtB,UAAU,OAAf,SACE,wBAAQuB,OAAQA,EAAQM,MAAM,SAASC,QAAQ,gBAAgBC,YAAY,IAAIC,MAAM,OAAOC,OAAO,eC3B3GC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3d58b7e6.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCompressAlt, faExpandAlt} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Editor(props){\r\n\r\n    const {language,displayName,value,onChange} = props;\r\n    const [open,setOpen] = useState(true);\r\n\r\n    function handleChange(editor, data, value){\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button type=\"button\" className=\"expand-collapse-btn\" onClick={()=>setOpen(prevOpen => !prevOpen)}>\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror--wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor';\n\nfunction App() {\n  const [html, setHtml] = useState('');\n  const [css, setCss] = useState('');\n  const [js, setJs] = useState('');\n  const [srcDoc,setSrcDoc] = useState('');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(\n        `<html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>`\n      )\n    }, 250);\n\n    return ()=> clearTimeout(timeout);\n  }, [html, css, js])\n\n\n  return (\n    < >\n      <div className=\"pane top-pane\">\n        <Editor language=\"xml\" displayName=\"HTML\" value={html} onChange={setHtml} />\n        <Editor language=\"css\" displayName=\"CSS\" value={css} onChange={setCss} />\n        <Editor language=\"javascript\" displayName=\"JS\" value={js} onChange={setJs} />\n      </div>\n      <div className=\"pane\">\n        <iframe srcDoc={srcDoc} title=\"output\" sandbox=\"allow-scripts\" frameBorder=\"0\" width=\"100%\" height=\"100%\" />\n      </div>\n    </>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}